import React, {useEffect} from "react"
import {SwitchRoot} from "./switch/SwitchRoot";
import {IceAppRoot} from "./iceApp/IceAppRoot";
import {TopLevelError} from "../common/component/TopLevelError";
import {app} from "./AppId";
import {IceRoot} from "../ice/IceRoot";


interface Props {
    appId: string
}

export const AppRoot = (props: Props) => {

    useEffect(() => {
        app.id = props.appId
    },[])

    const [type, _rest] = props.appId.split("-")

    switch (type) {
        case "status_light":
            return <SwitchRoot appId={props.appId}/>

        case "netwalk":
        case "password":
        case "tar":
        case "tangle":
        case "wordSearch":
            return < IceRoot layerId={props.appId} type="user"/>

        default:
            return <TopLevelError error="Invalid connection"
                                  description={`(Uknown app type: ${type} , maybe this QR/URL was generated by an different version of AV?)`}/>
    }
}